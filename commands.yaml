# List of commands to set up a simple kubernetes cluster
# https://www.youtube.com/watch?v=WbaDPlJxaxc <- Great viedo
#
# Master runs kube-api-server, kube-controller-manager, kube-proxy, kube-scheduler
# Ip:
# - Master: 10.0.1.1/16
# - Slave: 10.0.10.2/16

etcd:
  download: From https://github.com/etcd-io/etcd/releases latest etcd archive
  run: |-
    mkdir -p /etc/kubernetes/logs
    mkdir /tmp/etcdinstall
    mv {DOWNLOADED_FILE} /tmp/etcdinstall
    tar xzvf /tmp/etcdinstall/{DOWNLOADED_FILE} -C /tmp/etcdinstall --strip-components=1
    mv /tmp/etcdinstall/etcd /usr/bin/
    etcd --listen-client-urls http://localhost:2379 --advertise-client-urls http://localhost:2379 &> /etc/kubernetes/logs/etcd.log &

kube-apiserver:
  download: From https://www.downloadkubernetes.com/ latest kube-apiserver
  run: |-
    mv ./api-server /usr/bin/
    mkdir -p /etc/kubernetes/logs/
    mkdir /etc/kubernetes/certs/
# Place certs in /etc/kubernetes/certs. Generate them according to https://kubernetes.io/docs/tasks/administer-cluster/certificates/
# To connect to the api you'll need to trust the self-signed cert
    kube-apiserver \
      --advertise-address=10.0.1.1 \
      --bind-address=0.0.0.0 \
      --service-cluster-ip-range=10.10.0.0/16 \
      --etcd-servers=http://localhost:2379 \

      --service-account-signing-key-file=/home/tymon_wilczek/certs/key \
      --service-account-key-file=/home/tymon_wilczek/certs/key.pub \
      --service-account-issuer=https://your.mom \
      --client-ca-file=/etc/kubernetes/certs/ca.crt \
      --tls-cert-file=/etc/kubernetes/certs/server.crt \
      --tls-private-key-file=/etc/kubernetes/certs/server.key \
      &> /etc/kubernetes/logs/kube-apiserver.log &

# FUCK THAT
# Maybe I'll try doing it the hard way later
---
# kubeadm

gcloud-code: |-
    gcloud compute instances create kubeadm \
    --project=k8s-test-621 \
    --zone=europe-north1-a \
    --machine-type=e2-medium \
    --network-interface=network-tier=PREMIUM,private-network-ip=10.0.2.1,stack-type=IPV4_ONLY,subnet=k8s-subnet \
    --maintenance-policy=MIGRATE \
    --provisioning-model=STANDARD \
    --service-account=516038579599-compute@developer.gserviceaccount.com \
    --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append \
    --create-disk=auto-delete=yes,boot=yes,device-name=kubeadm,image=projects/debian-cloud/global/images/debian-11-bullseye-v20230411,mode=rw,size=10,type=projects/k8s-test-621/zones/us-west4-b/diskTypes/pd-balanced \
    --no-shielded-secure-boot \
    --shielded-vtpm \
    --shielded-integrity-monitoring \
    --labels=ec-src=vm_add-gcloud \
    --reservation-affinity=any

all-nodes:
- sudo su
- apt update
- apt upgrade -y
- apt install docker.io -y
- curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
- mkdir -p /etc/apt/keyrings/
- curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
- echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
- apt-get update
- apt-get install -y kubelet kubeadm kubectl

master-node:
- kubeadm init --pod-network-cidr 10.10.0.0/16 --apiserver-advertise address=10.0.2.1
- export KUBECONFIG=/etc/kubernetes/admin.conf
- {apply calico networking config from https://docs.tigera.io/calico/latest/getting-started/kubernetes/self-managed-onprem/onpremises. in my case:}
- kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/calico-typha.yaml

slave-node:
- sudo su
- {command generated by master node. Should look like:}
- kubeadm join 10.0.2.1:6443 --token a7sq87.bh6m71i161rl0gt5 \
        --discovery-token-ca-cert-hash sha256:2334b6a3d1745e66108f83b36fa11565777f3ef28a17ccc347d9ac70eb0a69bb
- {After adding node to cluster label it ON MASTER:}
- kubectl label node kubeadm-node-x node-role.kubernetes.io/slave=slave




database:
  master-password: 9eylQAuh:TP1m7|\
  user-password: M9I}[6@;eP~~/K(J
  db-ip: 10.58.144.3




